#include <behaviors/mouse_key_press.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        caps_word_combo {
            bindings = <&caps_word>;
            key-positions = <16 19>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            display-name = "Base";
            bindings = <
&none  &kp Q         &kp W         &kp E          &kp R          &kp T            &kp Y        &kp U          &kp I          &kp O           &kp P           &none
&none  &u_mt LGUI A  &u_mt LALT S  &u_mt LCTRL D  &u_mt LSHFT F  &kp G            &kp H        &u_mt LSHFT J  &u_mt LCTRL K  &u_mt LALT L    &u_mt LGUI SQT  &none
&none  &u_lt 1 Z     &u_mt RALT X  &kp C          &kp V          &kp B            &kp N        &kp M          &kp COMMA      &u_mt RALT DOT  &u_lt 1 SLASH   &none
                                   &u_lt 4 ESC    &u_lt 2 TAB    &u_lt 3 SPACE    &u_lt 6 RET  &u_lt 5 BSPC   &u_lt 7 DEL
            >;
        };

        BUTTON {
            display-name = "Button";
            bindings = <
&none  &kp K_UNDO  &kp LS(DEL)  &kp LC(INS)  &kp LS(INS)  &kp K_AGAIN    &kp K_AGAIN  &kp LS(INS)  &kp LC(INS)  &kp LS(DEL)  &kp K_UNDO  &none
&none  &kp LGUI    &kp LALT     &kp LCTRL    &kp LSHFT    &none          &none        &kp LSHFT    &kp LCTRL    &kp LALT     &kp LGUI    &none
&none  &kp K_UNDO  &kp LS(DEL)  &kp LC(INS)  &kp LS(INS)  &kp K_AGAIN    &kp K_AGAIN  &kp LS(INS)  &kp LC(INS)  &kp LS(DEL)  &kp K_UNDO  &none
                                &mkp MB3     &mkp MB1     &mkp MB2       &mkp MB2     &mkp MB1     &mkp MB3
            >;
        };

        NAV {
            display-name = "Nav";
            bindings = <
&none  &none     &none     &none      &none      &none    &kp K_AGAIN   &kp LS(INS)  &kp LC(INS)  &kp LS(DEL)  &kp K_UNDO  &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &u_caps_word  &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT   &none
&none  &none     &kp RALT  &none      &none      &none    &kp INS       &kp HOME     &kp PG_DN    &kp PG_UP    &kp END     &none
                           &none      &none      &none    &kp RET       &kp BSPC     &kp DEL
            >;
        };

        MOUSE {
            display-name = "Mouse";
            bindings = <
&none  &bootloader  &none     &none      &none      &none    &kp K_AGAIN  &kp LS(INS)  &kp LC(INS)  &kp LS(DEL)  &kp K_UNDO  &none
&none  &kp LGUI     &kp LALT  &kp LCTRL  &kp LSHFT  &none    &none        &kp KP_N4    &kp KP_N2    &kp KP_N8    &kp KP_N6   &none
&none  &none        &kp RALT  &none      &none      &none    &none        &none        &none        &none        &none       &none
                              &none      &none      &none    &mkp MB2     &mkp MB1     &mkp MB3
            >;
        };

        MEDIA {
            display-name = "Media";
            bindings = <
&none  &none     &none     &none      &none      &none    &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &none            &kp C_PREV       &kp C_VOL_DN     &kp C_VOL_UP     &kp C_NEXT       &none
&none  &none     &kp RALT  &none      &none      &none    &u_out_tog       &u_bt_sel_0      &u_bt_sel_1      &u_bt_sel_2      &u_bt_sel_3      &none
                           &none      &none      &none    &kp C_STOP       &kp C_PP         &kp C_MUTE
            >;
        };

        NUM {
            display-name = "Num";
            bindings = <
&kp GRAVE  &kp N1        &kp N2    &kp N3     &kp N4     &kp N5       &kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &none
&kp SEMI   &kp LEFT_WIN  &kp LALT  &kp LCTRL  &kp LSHFT  &kp EQUAL    &kp PLUS   &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &kp COLON
&none      &none         &none     &none      &none      &kp MINUS    &kp UNDER  &none      &none      &kp RALT  &none     &none
                                   &none      &none      &kp MINUS    &none      &none      &none
            >;
        };

        SYM {
            display-name = "Sym";
            bindings = <
&kp TILDE  &kp EXCL      &kp AT    &kp HASH   &kp DLLR        &kp CARET               &kp AMPS               &kp ASTRK  &kp LPAR   &kp RPAR  &kp UNDER  &kp PLUS
&none      &kp LEFT_GUI  &kp LALT  &kp LCTRL  &kp LSHFT       &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI   &none
&none      &none         &none     &none      &kp LEFT_BRACE  &kp LEFT_BRACKET        &kp RBKT               &kp RBRC   &none      &kp RALT  &none      &none
                                   &kp LPAR   &kp RPAR        &kp UNDER               &none                  &none      &none
            >;
        };

        FUN {
            display-name = "Fun";
            bindings = <
&kp F1  &kp F2    &kp F3    &kp F4     &kp F5     &kp F6             &kp F7          &kp F8     &kp F9     &kp F10   &kp F11   &kp F12
&none   &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &kp PRINTSCREEN    &kp SCROLLLOCK  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
&none   &none     &none     &none      &none      &kp PAUSE_BREAK    &none           &none      &none      &kp RALT  &none     &none
                            &kp K_APP  &kp TAB    &kp SPACE          &none           &none      &none
            >;
        };
    };
};

/ {
    macros {
        u_macro_u_bt_sel_0: u_macro_u_bt_sel_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 0 &bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
        u_bt_sel_0: u_bt_sel_0 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0>, <&u_macro_u_bt_sel_0>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    macros {
        u_macro_u_bt_sel_1: u_macro_u_bt_sel_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 1 &bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
        u_bt_sel_1: u_bt_sel_1 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1>, <&u_macro_u_bt_sel_1>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    macros {
        u_macro_u_bt_sel_2: u_macro_u_bt_sel_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 2 &bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
        u_bt_sel_2: u_bt_sel_2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2>, <&u_macro_u_bt_sel_2>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    macros {
        u_macro_u_bt_sel_3: u_macro_u_bt_sel_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 3 &bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
        u_bt_sel_3: u_bt_sel_3 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3>, <&u_macro_u_bt_sel_3>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    macros {
        u_macro_u_bt_sel_4: u_macro_u_bt_sel_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 4 &bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
        u_bt_sel_4: u_bt_sel_4 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4>, <&u_macro_u_bt_sel_4>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    behaviors {
        u_out_tog: u_out_tog {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&out OUT_TOG>, <&out OUT_USB>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    behaviors {
        u_caps_word: u_caps_word {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&caps_word>, <&kp CAPS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    macros {
        u_macro_btn1: u_macro_btn1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&kp KP_SLASH &kp KP_N5>;
        };
    };
};

/ {
    macros {
        u_macro_btn2: u_macro_btn2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&kp KP_MINUS &kp KP_N5>;
        };
    };
};

/ {
    macros {
        u_macro_btn3: u_macro_btn3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&kp KP_ASTERISK &kp KP_N5>;
        };
    };
};

/ {
    behaviors {
        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };
};

#include <behaviors/mouse_key_press.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        caps_word_combo {
            bindings = <&caps_word>;
            key-positions = <16 19>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            display-name = "Base";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E             &kp R          &kp T          &kp Y        &kp U         &kp I        &kp O    &kp P     &kp ESCAPE
&kp LCTRL       &kp A  &kp S  &kp D             &kp F          &kp G          &kp H        &kp J         &kp K        &kp L    &kp SEMI  &kp APOSTROPHE
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C             &kp V          &kp B          &kp N        &kp M         &kp COMMA    &kp DOT  &kp FSLH  &kp RSHFT
                              &u_lt 5 LEFT_ALT  &u_lt 3 SPACE  &u_lt 2 TAB    &u_lt 1 RET  &u_lt 1 BSPC  &u_lt 6 DEL
            >;
        };

        NUM {
            display-name = "Num";
            bindings = <
&kp TILDE  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp EQUAL
&kp GRAVE  &kp N1        &kp N2      &kp N3         &kp N4        &kp N5           &kp N6         &kp N7        &kp N8        &kp N9        &kp N0        &kp DOUBLE_QUOTES
&kp LSHFT  &none         &none       &kp LS(LBRC)   &kp LBKT      &kp LS(LPAR)     &kp LS(RPAR)   &kp RBKT      &kp LS(RBRC)  &none         &kp BSLH      &kp RSHFT
                                     &kp LCTRL      &kp LEFT_ALT  &kp MINUS        &none          &none         &none
            >;
        };

        SYM {
            bindings = <
&none  &none  &none  &none  &none  &none    &none      &kp LS(LBRC)  &kp LS(RBRC)  &none    &none    &kp PLUS
&none  &none  &none  &none  &none  &none    &none      &kp LS(LPAR)  &kp LS(RPAR)  &kp SQT  &kp DQT  &none
&none  &none  &none  &none  &none  &none    &none      &kp LBKT      &kp RBKT      &none    &none    &none
                     &none  &none  &none    &kp UNDER  &kp EQUAL     &kp COLON
            >;
        };

        NAV {
            display-name = "Nav";
            bindings = <
&none  &none     &none     &none      &none      &none    &kp K_AGAIN   &kp LS(INSERT)  &kp LC(INS)  &kp LS(DEL)  &kp K_UNDO  &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &u_caps_word  &kp LEFT        &kp DOWN     &kp UP       &kp RIGHT   &none
&none  &none     &kp RALT  &none      &none      &none    &kp INS       &kp HOME        &kp PG_DN    &kp PG_UP    &kp END     &none
                           &none      &none      &none    &kp RET       &kp BSPC        &kp DEL
            >;
        };

        MOUSE {
            display-name = "Mouse";
            bindings = <
&none  &bootloader  &none     &none      &none      &none    &kp K_AGAIN  &kp LS(INS)  &kp LC(INS)  &kp LS(DEL)  &kp K_UNDO  &none
&none  &kp LGUI     &kp LALT  &kp LCTRL  &kp LSHFT  &none    &none        &kp KP_N4    &kp KP_N2    &kp KP_N8    &kp KP_N6   &none
&none  &none        &kp RALT  &none      &none      &none    &none        &none        &none        &none        &none       &none
                              &none      &none      &none    &mkp MB2     &mkp MB1     &mkp MB3
            >;
        };

        MEDIA {
            display-name = "Media";
            bindings = <
&none  &none     &none     &none      &none      &none    &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &none            &kp C_PREV       &kp C_VOL_DN     &kp C_VOL_UP     &kp C_NEXT       &none
&none  &none     &kp RALT  &none      &none      &none    &u_out_tog       &u_bt_sel_0      &u_bt_sel_1      &u_bt_sel_2      &u_bt_sel_3      &none
                           &none      &none      &none    &kp C_STOP       &kp C_PP         &kp C_MUTE
            >;
        };

        FUN {
            display-name = "Fun";
            bindings = <
&none  &kp F1  &kp F2  &kp F3     &kp F10    &kp PRINTSCREEN    &none  &none      &none      &none     &none     &none
&none  &kp F4  &kp F5  &kp F6     &kp F11    &kp SCROLLLOCK     &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
&none  &kp F7  &kp F8  &kp F9     &kp F12    &kp PAUSE_BREAK    &none  &none      &none      &kp RALT  &none     &none
                       &kp K_APP  &kp SPACE  &kp TAB            &none  &none      &none
            >;
        };
    };
};

/ {
    macros {
        u_macro_u_bt_sel_0: u_macro_u_bt_sel_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 0 &bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
        u_bt_sel_0: u_bt_sel_0 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0>, <&u_macro_u_bt_sel_0>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    macros {
        u_macro_u_bt_sel_1: u_macro_u_bt_sel_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 1 &bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
        u_bt_sel_1: u_bt_sel_1 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1>, <&u_macro_u_bt_sel_1>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    macros {
        u_macro_u_bt_sel_2: u_macro_u_bt_sel_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 2 &bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
        u_bt_sel_2: u_bt_sel_2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2>, <&u_macro_u_bt_sel_2>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    macros {
        u_macro_u_bt_sel_3: u_macro_u_bt_sel_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 3 &bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
        u_bt_sel_3: u_bt_sel_3 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3>, <&u_macro_u_bt_sel_3>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    macros {
        u_macro_u_bt_sel_4: u_macro_u_bt_sel_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&bt BT_SEL 4 &bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
        u_bt_sel_4: u_bt_sel_4 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4>, <&u_macro_u_bt_sel_4>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    behaviors {
        u_out_tog: u_out_tog {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&out OUT_TOG>, <&out OUT_USB>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    behaviors {
        u_caps_word: u_caps_word {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&caps_word>, <&kp CAPS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    behaviors {
    };
};

/ {
    macros {
        u_macro_btn1: u_macro_btn1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&kp KP_SLASH &kp KP_N5>;
        };
    };
};

/ {
    macros {
        u_macro_btn2: u_macro_btn2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&kp KP_MINUS &kp KP_N5>;
        };
    };
};

/ {
    macros {
        u_macro_btn3: u_macro_btn3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            bindings = <&kp KP_ASTERISK &kp KP_N5>;
        };
    };
};

/ {
    behaviors {
        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };
};
